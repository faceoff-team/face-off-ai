# This is a basic workflow to help you get started with Actions

name: beta

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ beta ]
  pull_request:
    branches: [ beta ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  EMAIL_PASS: ${{ secrets.password }}
  OAUTHCLIENTID: ${{ secrets.OAUTHCLIENTID }}
  OAUTHCLIENTSECRET: ${{ secrets.OAUTHCLIENTSECRET }}
  REFRESH: ${{ secrets.REFRESH }}
  YOUTUBE: ${{ secrets.YOUTUBE }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v2

      - name: make ./run.sh executable
        run: chmod 777 ./frontend/face-off-ai/run.sh

      - name: build build_frontend container
        run: |
          cd frontend/face-off-ai
          docker build -t build_frontend .

      - name: run build_frontend container
        run: docker run -v $PWD/backend/react/:/usr/app/build/ --name="build_frontend" build_frontend

      - name: Remove the build_frontend container
        run: docker rm -f build_frontend

      - name: Build new backend image
        run: |
          mkdir ./react
          docker-compose build

      - name: Build new testing image
        run: |
          cd ./backend/test
          docker-compose build

  test:
    runs-on: [self-hosted, linux]
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Run Database
        run: |
          cd ./backend/test
          docker-compose down
          docker-compose up -d test-db

      - name: Wait for Database and clean database
        run: |
          cd ./backend/test
          ./wait-for-db.sh

#     - name: Clean database
#        run: |
#          docker cp ./db_config/config_tables.sql test-faceoff-db:/config.sql
#          cd ./backend/test
#          while true; do docker exec -i test-faceoff-db /bin/sh -c 'mysql -u root -ppassword -h 127.0.0.1 < /config.sql; exit $?'; if [ $? -eq 0 ]; then break; fi; echo .; sleep 1; done;

      - name: Run tests
        run: |
          cd ./backend/test
          docker-compose up --exit-code-from test-backend

      - name: Stop containers
        run: docker-compose down